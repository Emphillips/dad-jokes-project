{"version":3,"sources":["Components/SignedInLink.js","Store/Actions/AuthActions.js","Components/SignedOutLink.js","Components/NavBar.js","Components/Auth/SignIn.js","Components/Auth/SignUp.js","Components/Joke.js","Components/JokeList.js","Components/Dashboard/DashboardTitle.js","Components/Dashboard/Dashboard.js","App.js","serviceWorker.js","Store/Reducers/AuthReducer.js","Store/Reducers/RootReducer.js","Config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","SignedInLink","SignedOutLink","SignIn","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","signIn","this","authError","onSubmit","htmlFor","onChange","Component","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","Joke","votes","upvote","style","borderColor","getColor","downvote","text","getEmoji","JokeList","jokes","JSON","parse","window","localStorage","getItem","loading","handleClick","bind","length","getJokes","numJokesToGet","axios","get","headers","Accept","res","push","uuid","data","joke","st","setItem","stringify","delta","map","j","src","alt","key","handleVote","defaultProps","DashboardTitle","Dashboard","App","exact","path","component","isLocalhost","Boolean","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","response","contentType","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","action","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25a16c14.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../Store/Actions/AuthActions';\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/JokeList'>Joke List</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className='btn btn-gloating pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps) (SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err });\r\n    });\r\n    \r\n  }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS'});\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp) => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' })\r\n    }).catch(err => {\r\n      dispatch({ type: 'SIGUP_ERROR', err })\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n        <li><NavLink to='/SignUp'>Sign Up</NavLink></li>\r\n        <li><NavLink to='/SignIn'>Log In</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLink';\r\nimport SignedOutLinks from './SignedOutLink';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n            <Link to='/' className=\"brand-logo\"><span>Dad</span>Jokes</Link>\r\n            { links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n      auth: state.firebase.auth,\r\n      profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../Store/Actions/AuthActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state ={\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    // If you are signed in then it will redirect to Dashboard\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          <div className=\"red-text-center\">\r\n            { authError ? <p>{ authError }</p> : null }\r\n          </div>\r\n            </div>\r\n          </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../Store/Actions/AuthActions';\r\nclass SignUp extends Component {\r\n  state ={\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n  }\r\n\r\n  render() {\r\n    // Guarded Route\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n          <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n              <div className=\"red-text center\">\r\n                { authError ? <p>{ authError }</p> : null }\r\n              </div>\r\n            </div>\r\n          </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n// Attach to Props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SignUp);\r\n","import React, { Component } from 'react';\r\nimport './Joke.css';\r\n\r\nclass Joke extends Component {\r\n    \r\n    getColor(){\r\n    if(this.props.votes >= 15){\r\n        return \"#4caf50\";\r\n    }   else if (this.props.votes >= 12) {\r\n        return  \"#8bc34a\";\r\n    }   else if (this.props.votes >= 9) {\r\n        return  \"#cddc39\";\r\n    }   else if (this.props.votes >= 6) {\r\n        return  \"#ffeb3b\";\r\n    }   else if (this.props.votes >= 3) {\r\n        return  \"#ffc107\";\r\n    }   else if (this.props.votes >= 0) {\r\n        return  \"#ff9800\";\r\n    }   else {\r\n        return  \"#f44336\";\r\n    }\r\n\r\n}\r\n\r\n\r\ngetEmoji(){\r\n    if(this.props.votes >= 15){\r\n        return \"em em-rolling_on_the_floor_laughing\";\r\n    }   else if (this.props.votes >= 12) {\r\n        return  \"em em-laughing\";\r\n    }   else if (this.props.votes >= 9) {\r\n        return  \"em em-smiley\";\r\n    }   else if (this.props.votes >= 6) {\r\n        return  \"em em-slightly_smiling_face\";\r\n    }   else if (this.props.votes >= 3) {\r\n        return  \"em em-neutral_face\";\r\n    }   else if (this.props.votes >= 0) {\r\n        return  \"em em-confused\";\r\n    }   else {\r\n        return  \"em em-angry\";\r\n    }\r\n\r\n}\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div className='Joke'>\r\n                <div className='Joke-buttons'>\r\n                    <i className='fas fa-arrow-up' onClick={this.props.upvote} />\r\n                    <span className='Joke-votes' style={{borderColor: this.getColor()}}>\r\n                        {this.props.votes}</span>\r\n                    <i className='fas fa-arrow-down' onClick={this.props.downvote} />\r\n                </div>\r\n                <div className='Joke-text'>{this.props.text}</div>\r\n                <div className='Joke-smiley'>\r\n                    <i className={this.getEmoji()} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Joke;","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport Joke from './Joke';\r\nimport { v4 as uuid } from \"uuid\"; // updated synatx to fix uuid compile error\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './JokeList.css';\r\n\r\n\r\nclass JokeList extends Component {\r\n    static defaultProps = {\r\n        numJokesToGet: 10\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            jokes: JSON.parse(window.localStorage.getItem(\"jokes\") || \"[]\"),\r\n            loading: false\r\n     }; \r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n        \r\n\r\n    componentDidMount() {\r\n        if(this.state.jokes.length === 0) this.getJokes();\r\n    }\r\n\r\n        async getJokes() {\r\n            let jokes = [];\r\n            while(jokes.length < this.props.numJokesToGet) {\r\n                let res = await axios.get(\"https://icanhazdadjoke.com/\", {\r\n                    headers: {Accept: \"application/json\"}  // Header added to format in JSON \r\n                });\r\n                jokes.push({ id: uuid(), text: res.data.joke, votes: 0 });\r\n            }\r\n            this.setState(st => ({\r\n                loading: false,\r\n                jokes: [...st.jokes, ...jokes]\r\n            }),\r\n            () => window.localStorage.setItem(\"jokes\", JSON.stringify\r\n            (this.state.jokes))\r\n            );\r\n            \r\n            }\r\n        \r\n    handleVote(id, delta) {\r\n        this.setState(\r\n            st => ({\r\n                jokes: st.jokes.map(j =>\r\n                j.id === id ? {...j, votes: j.votes + delta } : j \r\n                )\r\n            }),\r\n            () => window.localStorage.setItem(\"jokes\", JSON.stringify\r\n            (this.state.jokes))\r\n            );\r\n    }\r\n    handleClick() {\r\n        this.setState({loading: true}, this.getJokes);\r\n    }\r\n    render() {\r\n        if(this.state.loading) {\r\n            return (\r\n                <div className=\"JokeList-spinner\">\r\n                    <i className=\"far fa-8x fa-laugh fa-spin\" />\r\n                    <h1 className=\"JokeList-title\">Loading...</h1>\r\n                </div>\r\n            );\r\n        }\r\n        // Guarded Route -- If signed in will show Joke list.\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return ( // Jokes display\r\n        <div className=\"Joke-app\">\r\n            <div className=\"JokeList\">\r\n                <div className=\"JokeList-sidebar\">\r\n                <h1 className=\"JokeList-title\"><span>Dad</span>Jokes\r\n                </h1>\r\n                <img src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\" alt=\"\" />\r\n                <button className=\"JokeList-getmore\" onClick={this.handleClick}>New Jokes</button>\r\n                </div>\r\n                \r\n                <div className=\"JokeList-jokes\">\r\n                    {this.state.jokes.map(j => (\r\n                        <Joke key={j.id} \r\n                        votes={j.votes} \r\n                        text={j.text} \r\n                        upvote={() => this.handleVote(j.id, 1)} \r\n                        downvote={() => this.handleVote(j.id, -1)}\r\n                    />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Attach to Props\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      auth: state.firebase.auth\r\n    }\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps) (JokeList);","import React, { Component } from 'react'\r\n\r\n\r\nexport class DashboardTitle extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Dashboard\">\r\n        <div className=\"Dash-main\">\r\n          <div className=\"Dash-sidebar\">\r\n        <h1 className=\"Dash-title\"><span>Dad</span>Jokes</h1>\r\n        <img src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\" alt=\"\" />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n// <i class=\"em em-man_dancing\" aria-role=\"presentation\" aria-label=\"MAN DANCING\"></i>\r\nexport default DashboardTitle;\r\n","import React, { Component } from 'react';\r\nimport DashboardTitle from './DashboardTitle';\r\n// import { Redirect } from 'react-router-dom';\r\n// import { connect } from 'react-redux';\r\n\r\n// import { firestoreConnect } from 'react-redux';\r\n// import { compose } from 'redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        // const { auth } = this.props;\r\n        // if (auth.uid) return <Redirect to='/signin' />\r\n\r\n            return (\r\n                <div className=\"dashboard-container\">\r\n                <DashboardTitle />\r\n                </div>  \r\n             )}\r\n}       \r\n\r\n// const mapStateToProps = (state) => {\r\n//     console.log(state);\r\n//     return {\r\n//         auth: state.firebase.auth\r\n//     }\r\n// }\r\n\r\n// export default connect (mapStateToProps)(Dashboard);\r\n\r\nexport default (Dashboard);","import React, { Component } from 'react';\nimport Navbar from './Components/NavBar';\nimport SignIn from './Components/Auth/SignIn';\nimport SignUp from './Components/Auth/SignUp';\nimport JokeList from './Components/JokeList';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/SignIn\" component={SignIn} />\n            <Route path=\"/SignUp\" component={SignUp} />\n            <Route path=\"/JokeList\" component={JokeList} />\n          </Switch>\n            \n        </div>\n      </Router>\n      \n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n      case 'LOGIN_ERROR':\r\n        console.log('login error');\r\n        return {\r\n          ...state,\r\n          authError: 'Login failed'\r\n        }\r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login success');\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n        case 'SIGNOUT_SUCCESS':\r\n          console.log('signout success');\r\n          return state;\r\n          case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n              ...state,\r\n              authError: null\r\n            }\r\n            case 'SIGNUP_ERROR':\r\n              console.log('signup error')\r\n              return {\r\n                ...state,\r\n                authError: action.err.message\r\n              }\r\n        default:\r\n          return state;\r\n\r\n  }\r\n}\r\n\r\nexport default authReducer;","import authReducer from './AuthReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\n\r\n\r\n\r\nconst rootReducer = combineReducers ({\r\n  auth: authReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n  \r\n\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDX_zSA_s_wqxbwyQhxwdLZTLeOtIdck1I\",\r\n  authDomain: \"dad-joke-project.firebaseapp.com\",\r\n  databaseURL: \"https://dad-joke-project.firebaseio.com\",\r\n  projectId: \"dad-joke-project\",\r\n  storageBucket: \"dad-joke-project.appspot.com\",\r\n  messagingSenderId: \"471741642079\",\r\n  appId: \"1:471741642079:web:ad79d86040e95199e7f2ea\",\r\n  measurementId: \"G-ZE8XX9KBVR\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './Store/Reducers/RootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport{ reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './Config/fbConfig';\n\n\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(fbConfig),\n      reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n  );\n\n  store.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root')); \n    serviceWorker.register();\n  })\n  "],"sourceRoot":""}